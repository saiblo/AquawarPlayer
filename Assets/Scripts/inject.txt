<script>
  function debounce(f, msecs) {
    let timer = null;
    return function(...args) {
      if (timer === null) {
        timer = setTimeout(() => { f(...args); timer = null; }, msecs);
      }
    }
  }
  window.addEventListener('message', (ev) => {
    const msg = ev.data;
    if (msg.message === 'init_replay_player') {
      function origResize(h) {
        ev.source.postMessage({
          message: "resized",
          height: h - 30,
        }, ev.origin);
      }
      if (!window.saiblo) window.saiblo = {};
      window.saiblo.replay = msg.replay_data;
      window.saiblo.confirmReplay = function (numberOfFrames) {
        const initMsg = { message: 'init_successfully', number_of_frames: numberOfFrames };
        ev.source.postMessage(initMsg, ev.origin);
      };
      window.saiblo.resize = debounce(origResize, 100);
      window.saiblo.callback = {};
      const reader = new FileReader();
      reader.onloadend = () => {
          window.replay = reader.result;
      }
      reader.readAsText(msg.replay_data);

    } else if (msg.message === 'load_frame') {
      if (window.saiblo.callback.loadFrame) {
        window.saiblo.callback.loadFrame(msg["index"]);
      }
    } else if (msg.message === 'load_next_frame' || msg.message === 'next_frame') {
      if (window.saiblo.callback.nextFrame) {
        window.saiblo.callback.nextFrame();
      }
    } else if (msg.message === "load_players") {
      if (!window.saiblo) window.saiblo = {};
      window.saiblo.players = msg.players;
      window.saiblo.callback.loadPlayers(msg.players);
    } else if (msg.message === "init_player_player") {
      if (!window.saiblo) window.saiblo = {};
      window.saiblo.token = msg.token;
      window.saiblo.resize = debounce(origResize, 100);
      window.saiblo.callback = {};
    }
  }, false)
  window.onload = () => {
    const div = window.document.getElementById("GameDiv");
    let timeout = null;
    window.onresize = () => {
      if (timeout === null) {
        timeout = setTimeout(() => {
          div.style.setProperty("height", (window.innerHeight - 20) + "px");
          div.style.setProperty("width", (window.innerWidth - 20) + "px");
          window.dispatchEvent(new Event("resize"));
          timeout = null;
        }, 100);
      }
      window.saiblo.resize(window.innerWidth * 3 / 4);
    }
  }
  function getReplay() {
    return window.replay === undefined ? "" : window.replay;
  }
  console.log('Saiblo compatibility code injected.')
</script>